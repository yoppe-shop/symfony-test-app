Funktionale Tests schreiben:

https://symfony.com/doc/current/testing.html

AUFRUF: Die funktionalen Tests werden in der Konsole mit phpunit aufgerufen wie die PHPUnit-Tests.

Werden automatisch mitgeneriert, wenn man einen Controller generiert und liegen 
im SRC-Bundle-Unterordner 'Tests'.

Man h√§ngt 'Test' an den Klassennamen und erweitert die Klasse 
Symfony\Bundle\FrameworkBundle\Test\WebTestCase

Im Test simuliert man einen HTTP-Client, der wie ein Browser Anfragen stellt:

<?php

// C:\xampp\htdocs\symfony\src\AppBundle\Tests\Controller\TestingControllerTest.php

namespace AppBundle\Tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class TestingControllerTest extends WebTestCase
{
    public function testGetValueAction()
    {
        $client = static::createClient();

        $crawler = $client->request('GET', '/testing/get_value');

        $this->assertGreaterThan(
            999,
            $client->getResponse()->getContent()
        );
    }
}


Use forms:

$form = $crawler->selectButton('submit')->form();

// set some values
$form['name'] = 'Lucas';
$form['form_name[subject]'] = 'Hey there!';

// submit the form
$crawler = $client->submit($form);

$this->assertGreaterThan(0, $crawler->filter('h1')->count());

$this->assertContains(
    'Hello World',
    $client->getResponse()->getContent()
);

Click on links:

$link = $crawler
    ->filter('a:contains("Greet")') // find all links with the text "Greet"
    ->eq(1) // select the second link in the list
    ->link()
;

// and click it
$crawler = $client->click($link);

